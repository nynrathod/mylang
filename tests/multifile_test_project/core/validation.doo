import core::math::Add;
import core::math::Subtract;

fn IsInRange(value: Int, min: Int, max: Int) -> Int {
    if value >= min {
        if value <= max {
            return 1;
        }
    }
    return 0;
}

fn IsPositive(x: Int) -> Int {
    if x > 0 {
        return 1;
    }
    return 0;
}

fn IsNegative(x: Int) -> Int {
    if x < 0 {
        return 1;
    }
    return 0;
}

fn IsValidAge(age: Int) -> Int {
    return IsInRange(age, 18, 120);
}

fn IsValidScore(score: Int) -> Int {
    return IsInRange(score, 0, 100);
}

fn ValidateSum(a: Int, b: Int, expected: Int) -> Int {
    let total = Add(a, b);
    if total == expected {
        return 1;
    }
    return 0;
}
