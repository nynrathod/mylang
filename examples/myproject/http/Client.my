fn Fetchuser(id: Int) -> Str {
    return "User fetched";
}

fn FetchuserTw(id: Int) -> Str {
    let xOne: Int = 10;
    let yOne: Int = 20;
    let sumOne = xOne + yOne;
    print("sum1:", sumOne);

    // Array creation and iteration
    let numbers1: [Int] = [1, 2, 3, 4, 5];

    print("Numbers:", numbers1);

    // Simple for loop iteration
    for n in numbers1 {
        print("Number:", n);
    }

    // Map creation and access
    let scores1: {Str: Int} = {"Alice": 95, "Bob": 87, "Charlie": 92};

    print("Scores:", scores1);

    // String operations
    let name1: Str = "MyLang";
    let greeting1 = "Hello, " + name1 + "!";

    print(greeting1);

    let sum2 = 5 + 10;
    print("sum2:", sum2);

    let difference1 = 20 - 5;
    print("difference1:", difference1);

    let product1 = 6 * 7;
    print("product1:", product1);

    let quotient1 = 100 / 5;
    print("quotient1:", quotient1);

    // Comparison operators
    let isequal1 = 5 == 5;
    print("isequal1:", isequal1);

    let notequal1 = 5 != 10;
    print("notequal1:", notequal1);

    let greater1 = 10 > 5;
    print("greater1:", greater1);

    let lessequal1 = 5 <= 10;
    print("lessequal1:", lessequal1);

    // String concatenation
    let greeting2 = "Hello, " + "World!";
    print("greeting2:", greeting2);

    for ione in 0..5 {
        print(ione);
    }

    // Range iteration (inclusive)
    for itow in 0..=5 {
        print(itow);
    }

    // Array iteration
    let numbers2: [Int] = [1, 2, 3, 4, 5];
    for n in numbers2 {
        print("itemNew: ", n);
    }

    // Map iteration (key-value pairs)
    let scores2: {Str: Int} = {"Alice": 95, "Bob": 87};
    for (name2, score2) in scores2 {
        print(name2, ":", score2);
    }

    let condition1: Bool = true;

    if condition1 {
        print("asdasd");
    } else {
        print("segiosj");
    }

    // Nested conditions
    let result1 = 15;
    if condition1 {
        if result1 > 10 {
            print("Large result");
        } else {
            print("Small result");
        }
    }

    let immutable1: Int = 42;
    print("immutable1:", immutable1);

    let mut changeable1: Str = "hello";
    print("changeable1:", changeable1);

    let inferred1 = 42;
    print("inferred1:", inferred1);

    let dd =  {"John": "User1", "Alice": "User2"};
    let mut i = 0;
    for  key, val in dd {
        print("User details:", i, key, val);
        i = i + 1;
    }

    return "User fetched55";
}
